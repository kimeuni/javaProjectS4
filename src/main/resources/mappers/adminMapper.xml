<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.spring.javaProjectS4.dao.AdminDAO">
	<select id="getMemberList" resultType="com.spring.javaProjectS4.vo.MemberVO">
		select *,timestampdiff(day,lastDate,now()) as date_diff from memberS order by idx limit #{startIndexNo},#{pageSize};
	</select>
	<select id="getMemberSearchList" resultType="com.spring.javaProjectS4.vo.MemberVO">
		select *,timestampdiff(day,lastDate,now()) as date_diff from memberS where ${part} like concat('%',#{searchString},'%')order by idx limit #{startIndexNo},#{pageSize};
	</select>
	<select id="getMemberAllTotRecCnt" resultType="int">
		select count(*) from memberS;
	</select>
	<select id="getMemberSearchTotRecCnt" resultType="int">
		select count(*) from memberS where ${part} like concat('%',#{searchString},'%');
	</select>
	<select id="getUserDelList" resultType="com.spring.javaProjectS4.vo.MemberVO" >
		select *,timestampdiff(day,lastDate,now()) as date_diff from memberS where userDel='Y' order by lastDate limit #{startIndexNo},#{pageSize};
	</select>
	<select id="getUserDelTotRecCnt" resultType="int">
		select count(*) from memberS where userDel = 'Y';
	</select>
	<select id="getNoticeAllList" resultType="com.spring.javaProjectS4.vo.NoticeVO">
		select * from noticeS order by idx desc limit #{startIndexNo},#{pageSize};
	</select>
	<select id="getNoticeIdx" resultType="com.spring.javaProjectS4.vo.NoticeVO">
		select * from noticeS where idx = #{idx};
	</select>
	
	<insert id="setNoticeInput">
		insert into noticeS values (default,#{vo.nickName},#{vo.title},#{vo.content},default,default,#{vo.openSw});
	</insert>
	<insert id="setFAQInput">
		insert into FAQS values (default,#{vo.category},#{vo.question},#{vo.answer});
	</insert>
	
	<update id="setNoticeUpdate">
		update noticeS set title = #{vo.title}, content = #{vo.content}, nDate = now(), openSw = #{vo.openSw} where idx = #{vo.idx};
	</update>
	
	<delete id="setUserAccountDel">
		delete from memberS where mid = #{mid};
	</delete>
	<delete id="setNoticeDel">
		delete from noticeS where idx = #{idx};
	</delete>
</mapper>